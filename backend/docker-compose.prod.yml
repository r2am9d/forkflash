version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: forkflash-app-prod
    restart: always
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - forkflash-network
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD-SHELL", "php artisan health:check || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: forkflash-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/production.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - static_files:/var/www/public
    networks:
      - forkflash-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    container_name: forkflash-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - forkflash-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: forkflash-redis-prod
    restart: always
    volumes:
      - redis_prod_data:/data
    networks:
      - forkflash-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backup service for database
  backup:
    image: postgres:15-alpine
    container_name: forkflash-backup-prod
    restart: "no"
    environment:
      PGPASSWORD: ${DB_PASSWORD}
    volumes:
      - ./backups:/backups
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - forkflash-network
    entrypoint: |
      sh -c '
      apk add --no-cache dcron
      echo "0 2 * * * pg_dump -h db -U ${DB_USERNAME} ${DB_DATABASE} > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql" | crontab -
      crond -f
      '
    depends_on:
      - db

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local
  static_files:
    driver: local

networks:
  forkflash-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
